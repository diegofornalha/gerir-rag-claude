[
  {
    "content": "Atualizar servidor MCP para usar persistência existente em ~/.claude/mcp-rag-cache",
    "status": "completed",
    "priority": "high",
    "id": "1"
  },
  {
    "content": "Integrar servidor MCP com o cache/vetores já existentes (documents.json + vectors.npy)",
    "status": "in_progress",
    "priority": "high",
    "id": "2"
  },
  {
    "content": "Criar cliente MCP TypeScript para substituir exec() no backend",
    "status": "pending",
    "priority": "high",
    "id": "3"
  },
  {
    "content": "Sincronizar cache local com PostgreSQL (webfetch_documents)",
    "status": "pending",
    "priority": "high",
    "id": "4"
  },
  {
    "content": "Conectar RAGManagerSimple com API real (remover dados mockados)",
    "status": "pending",
    "priority": "high",
    "id": "5"
  },
  {
    "content": "Implementar ferramenta add_batch no servidor MCP",
    "status": "pending",
    "priority": "high",
    "id": "6"
  },
  {
    "content": "Unificar sistema de busca - usar apenas busca vetorial do MCP",
    "status": "pending",
    "priority": "medium",
    "id": "7"
  },
  {
    "content": "Adicionar WebSocket para atualizações em tempo real",
    "status": "pending",
    "priority": "medium",
    "id": "8"
  },
  {
    "content": "Migrar de TF-IDF para sentence-transformers",
    "status": "pending",
    "priority": "medium",
    "id": "9"
  },
  {
    "content": "Implementar deduplicação automática de documentos",
    "status": "pending",
    "priority": "medium",
    "id": "10"
  },
  {
    "content": "Adicionar suporte a chunking inteligente",
    "status": "pending",
    "priority": "low",
    "id": "11"
  },
  {
    "content": "Implementar cache de embeddings",
    "status": "pending",
    "priority": "low",
    "id": "12"
  },
  {
    "content": "Criar testes de integração end-to-end",
    "status": "pending",
    "priority": "low",
    "id": "13"
  }
]
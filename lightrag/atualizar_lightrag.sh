#!/bin/bash

# Script para atualizar o LightRAG com as melhorias de verifica√ß√£o de documentos
# Autor: Diego (via Claude)
# Data: $(date +%Y-%m-%d)

echo "=== Atualizando LightRAG com verifica√ß√£o avan√ßada de documentos duplicados ==="
echo

# Diret√≥rio base do LightRAG
LIGHTRAG_DIR=$(dirname "$0")
cd "$LIGHTRAG_DIR" || { echo "N√£o foi poss√≠vel acessar o diret√≥rio LightRAG"; exit 1; }

# Verificar se o servidor est√° rodando
if pgrep -f "python.*micro_lightrag.py" > /dev/null; then
    echo "‚ö†Ô∏è O servidor LightRAG est√° em execu√ß√£o."
    echo "Recomenda-se parar o servidor antes de atualizar os arquivos."
    read -p "Deseja continuar mesmo assim? (s/N): " response
    if [[ ! "$response" =~ ^[sSyY]$ ]]; then
        echo "Atualiza√ß√£o cancelada."
        exit 0
    fi
fi

# Fazer backup dos arquivos originais
echo "üì¶ Criando backups dos arquivos originais..."
BACKUP_DIR="$LIGHTRAG_DIR/backups_$(date +%Y%m%d%H%M%S)"
mkdir -p "$BACKUP_DIR"

# Arquivos para fazer backup
BACKUP_FILES=(
    "lightrag_mcp.py"
    "insert_to_rag.py"
)

for file in "${BACKUP_FILES[@]}"; do
    if [ -f "$file" ]; then
        cp "$file" "$BACKUP_DIR/" && echo "‚úÖ Backup de $file criado"
    fi
done

# Verificar se os novos arquivos existem
REQUIRED_FILES=(
    "improved_rag_insert_file.py"
    "lightrag_mcp_improved.py"
    "insert_to_rag_improved.py"
)

for file in "${REQUIRED_FILES[@]}"; do
    if [ ! -f "$file" ]; then
        echo "‚ùå Arquivo $file n√£o encontrado. Atualiza√ß√£o cancelada."
        exit 1
    fi
done

# Instalar pacotes Python necess√°rios
echo "üì¶ Verificando depend√™ncias..."
pip install --quiet hashlib || echo "‚ö†Ô∏è Aviso: n√£o foi poss√≠vel instalar o pacote hashlib (pode j√° estar inclu√≠do no Python padr√£o)"

# Atualizar arquivos
echo "üîÑ Atualizando arquivos do sistema..."

# Atualizar o cliente MCP
echo "Atualizando lightrag_mcp.py..."
cp lightrag_mcp_improved.py lightrag_mcp.py && echo "‚úÖ lightrag_mcp.py atualizado"

# Atualizar o script de inser√ß√£o
echo "Atualizando insert_to_rag.py..."
cp insert_to_rag_improved.py insert_to_rag.py && echo "‚úÖ insert_to_rag.py atualizado"

# Adicionar permiss√£o de execu√ß√£o aos scripts
chmod +x improved_rag_insert_file.py
chmod +x test_improved_rag_insert.py
chmod +x insert_to_rag_improved.py

echo
echo "‚úÖ Atualiza√ß√£o conclu√≠da com sucesso!"
echo
echo "Novos arquivos:"
echo "- improved_rag_insert_file.py: Implementa√ß√£o principal da verifica√ß√£o avan√ßada"
echo "- test_improved_rag_insert.py: Testes para verificar o funcionamento"
echo "- documentacao_melhorias.md: Documenta√ß√£o detalhada das melhorias"
echo
echo "Arquivos atualizados:"
echo "- lightrag_mcp.py: Cliente MCP com funcionalidade melhorada"
echo "- insert_to_rag.py: Script de linha de comando atualizado"
echo
echo "Backups criados em: $BACKUP_DIR"
echo
echo "Para testar a nova funcionalidade, execute:"
echo "  python test_improved_rag_insert.py [caminho_arquivo_opcional]"
echo
echo "Para reverter a atualiza√ß√£o, execute:"
echo "  cp $BACKUP_DIR/lightrag_mcp.py ."
echo "  cp $BACKUP_DIR/insert_to_rag.py ."
echo
echo "Documenta√ß√£o dispon√≠vel em: documentacao_melhorias.md"